<mah:MetroWindow
    x:Class="VRCEventUtil.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:v="clr-namespace:VRCEventUtil.Views"
    xmlns:vm="clr-namespace:VRCEventUtil.ViewModels"
    xmlns:conv="clr-namespace:VRCEventUtil.Converters"
    xmlns:m="clr-namespace:VRCEventUtil.Models"
    xmlns:userlist="clr-namespace:VRCEventUtil.Models.UserList"
    xmlns:props="clr-namespace:VRCEventUtil.Properties"
    xmlns:av="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="av"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    Title="VRChat Event Util"
    TitleCharacterCasing="Normal"
    Width="980" MinWidth="800"
    Height="650" MinHeight="650"
    WindowStartupLocation="CenterScreen"
    Icon="/VRCEventUtil;component/Resources/app_icon.png">

    <mah:MetroWindow.IconTemplate>
        <DataTemplate>
            <!-- Setting a Margin and enable hight-quality image -->
            <Image Margin="5"
                   RenderOptions.BitmapScalingMode="HighQuality"
                   Source="{Binding}" />
        </DataTemplate>
    </mah:MetroWindow.IconTemplate>

    <mah:MetroWindow.DataContext>
        <vm:MainWindowViewModel />
    </mah:MetroWindow.DataContext>

    <behaviors:Interaction.Triggers>
        <!--  When ContentRendered event raised, Initialize method of ViewModel would be called.  -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </behaviors:EventTrigger>

        <!--  Dispose method is called, when Window closing.  -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="InformationMessage">
            <l:InformationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="OpenFileDialog">
            <l:OpenFileDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="WindowInteraction">
            <l:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <!--  If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior.  -->

    </behaviors:Interaction.Triggers>

    <!--全体グリッド-->
    <Grid IsEnabled="{Binding IsLoading, Converter={StaticResource BoolInvertConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>

        <!--メニューバー-->
        <Menu Grid.Row="0">
            <MenuItem Header="{x:Static props:Resources.MenuTitle_File}">
                <MenuItem Header="{x:Static props:Resources.MenuTitle_Setting}"
                          Command="{Binding OpenSettingWindowCommand}">
                    <MenuItem.Icon>
                        <Path Data="{StaticResource SettingIcon}" Style="{StaticResource IconPathDefaultStyle}"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>

            <MenuItem Header="{x:Static props:Resources.MenuTitle_Help}">
                <MenuItem Header="{x:Static props:Resources.MenuTitle_About}"
                          Command="{Binding OpenAboutWindowCommand}">
                    <MenuItem.Icon>
                        <Path Data="{StaticResource InfoOutlineIcon}" Style="{StaticResource IconPathDefaultStyle}"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>

        <!--コンテンツグリッド-->
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="180"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" MinWidth="500"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="2*" MinWidth="250"/>
            </Grid.ColumnDefinitions>

            <GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="5" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

            <!--認証グリッド-->
            <GroupBox Grid.Row="0" Header="{x:Static props:Resources.Text_Authentication}">
                <Grid>
                    <Grid.Resources>
                        <Style x:Key="LoggedOutOnlyTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MahApps.Styles.TextBox}">
                            <Setter Property="IsEnabled" Value="{Binding IsLoggedIn, Converter={StaticResource BoolInvertConverter}}"/>
                        </Style>
                        <Style x:Key="LoggedOutOnlyPasswordBox" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MahApps.Styles.PasswordBox}">
                            <Setter Property="IsEnabled" Value="{Binding IsLoggedIn, Converter={StaticResource BoolInvertConverter}}"/>
                        </Style>
                    </Grid.Resources>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="16"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static props:Resources.Text_Username}"/>
                    <TextBox Grid.Row="1" Grid.Column="0" Text="{Binding Username}"
                         ToolTip="{x:Static props:Resources.Text_Username}" VerticalContentAlignment="Center"
                         Style="{StaticResource LoggedOutOnlyTextBox}"/>

                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{x:Static props:Resources.Text_Password}"/>
                    <PasswordBox Grid.Row="1" Grid.Column="1" ToolTip="{x:Static props:Resources.Text_Password}"
                             VerticalContentAlignment="Center" Style="{StaticResource LoggedOutOnlyPasswordBox}">
                        <behaviors:Interaction.Behaviors>
                            <l:PasswordBoxBindingSupportBehavior Password="{Binding Password}"/>
                        </behaviors:Interaction.Behaviors>
                    </PasswordBox>

                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{x:Static props:Resources.Text_MFACode}"/>
                    <PasswordBox Grid.Row="1" Grid.Column="2" ToolTip="{x:Static props:Resources.Text_MFACode}"
                             VerticalContentAlignment="Center" Style="{StaticResource LoggedOutOnlyPasswordBox}">
                        <behaviors:Interaction.Behaviors>
                            <l:PasswordBoxBindingSupportBehavior Password="{Binding MFACode}"/>
                        </behaviors:Interaction.Behaviors>
                    </PasswordBox>

                    <Button Grid.Row="1" Grid.Column="3" ToolTip="{x:Static props:Resources.Text_Login}"
                            Command="{Binding LoginCommand}"
                            Visibility="{Binding IsLoggedIn, Converter={conv:BoolToVisibilityConverter Invert=True}}">
                        <Path Data="{StaticResource EnterIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="3" ToolTip="{x:Static props:Resources.Text_Logout}"
                            Command="{Binding LogoutCommand}"
                            Visibility="{Binding IsLoggedIn, Converter={conv:BoolToVisibilityConverter}}">
                        <Path Data="{StaticResource SignOutIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
                    </Button>
                </Grid>
            </GroupBox>

            <!--ワールド・インスタンス設定-->
            <GroupBox Grid.Row="1" Header="{x:Static props:Resources.Text_WorldInstanceSetting}" IsEnabled="{Binding IsLoggedIn}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="{x:Static props:Resources.Text_WorldId}" VerticalAlignment="Center"/>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="120"/>
                        </Grid.ColumnDefinitions>

                        <!--ワールドID入力欄-->
                        <TextBox Grid.Column="0" Text="{Binding WorldIdOrUrl}" VerticalContentAlignment="Center"
                                        ToolTipService.ShowDuration="30000" mah:TextBoxHelper.Watermark="例：wrld_ba913a96-fac4-4048-a062-9aa5db092812">
                            <TextBox.ToolTip>
                                <TextBlock Text="{x:Static props:Resources.Tooltip_WorldIdOrUrl}"/>
                            </TextBox.ToolTip>
                        </TextBox>

                        <ComboBox Grid.Column="1" SelectedValue="{Binding InstanceDisclosureRange}" ItemsSource="{Binding DisclosureRanges}"
                                        VerticalContentAlignment="Center"/>
                        <Button Grid.Column="2" Content="{x:Static props:Resources.Text_CreateInstance}"
                                    Command="{Binding CreateWorldInstanceCommand}"/>
                    </Grid>

                    <!--ロケーションID入力欄-->
                    <TextBlock Grid.Row="2" Text="{x:Static props:Resources.Text_LocationId}"
                                    VerticalAlignment="Center"/>
                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>

                        <TextBox Grid.Column="0" Text="{Binding LocationIdOrUrl, UpdateSourceTrigger=PropertyChanged}"
                                 VerticalContentAlignment="Center" ToolTipService.ShowDuration="30000" Height="25"
                                 mah:TextBoxHelper.Watermark="例：https://vrchat.com/home/launch?worldId=wrld_ba913a96-fac4-4048-a062-9aa5db092812&amp;instanceId=00000~region(jp)">
                            <TextBox.ToolTip>
                                <TextBlock Text="{x:Static props:Resources.Tooltip_LocationIdOrUrl}"/>
                            </TextBox.ToolTip>
                        </TextBox>

                        <Button Grid.Column="1" Command="{Binding CopyInstanceLinkCommand}"
                                ToolTip="{x:Static props:Resources.Text_CopyInstanceUrl}">
                            <Path Data="{StaticResource CopyLinkIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
                        </Button>

                        <Button Grid.Column="2" Command="{Binding OpenInVRChatCommand}"
                                    ToolTip="{x:Static props:Resources.Text_LaunchInVRChat}">
                            <Path Data="{StaticResource OpenIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
                        </Button>
                    </Grid>
                </Grid>
            </GroupBox>

            <!--グループ一覧-->
            <GroupBox Grid.Row="2" Header="{x:Static props:Resources.Text_GroupList}">
                <ItemsControl ItemsSource="{Binding Groups}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type userlist:UserGroup}">
                            <Grid>
                                <GroupBox Header="{Binding GroupName}" mah:ControlsHelper.ContentCharacterCasing="Normal"
                                      Margin="0 0 5 5" Width="180">
                                    <ItemsControl ItemsSource="{Binding Users}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type userlist:InviteUser}">
                                                <StackPanel Orientation="Horizontal" Margin="0 2">
                                                    <!--ユーザーの状態を色で示す四角形-->
                                                    <Rectangle VerticalAlignment="Stretch" Width="4" Margin="0 0 5 0">
                                                        <Rectangle.Style>
                                                            <Style TargetType="Rectangle">
                                                                <Setter Property="Fill" Value="Gray"/>
                                                                <Setter Property="ToolTip" Value="{x:Static props:Resources.Text_UserOffline}"/>
                                                                <Style.Triggers>
                                                                    <!--オンラインでInvite先のインスタンスにいない場合はオレンジ色-->
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding IsInInstance}" Value="False"/>
                                                                            <Condition Binding="{Binding IsOnline}" Value="True"/>
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="Fill" Value="{StaticResource OrangeColorBrush}"/>
                                                                        <Setter Property="ToolTip" Value="{x:Static props:Resources.Text_UserNotInInstance}"/>
                                                                    </MultiDataTrigger>
                                                                    <!--Invite先のインスタンスにいる場合は緑色-->
                                                                    <DataTrigger Binding="{Binding IsInInstance}" Value="True">
                                                                        <Setter Property="Fill" Value="{StaticResource GreenColorBrush}"/>
                                                                        <Setter Property="ToolTip" Value="{x:Static props:Resources.Text_UserInInstance}"/>
                                                                    </DataTrigger>
                                                                    <!--Invite送信済みの場合-->
                                                                    <DataTrigger Binding="{Binding HasInvited}" Value="True">
                                                                        <Setter Property="Fill" Value="{StaticResource LightBlueColorBrush}"/>
                                                                        <Setter Property="ToolTip" Value="{x:Static props:Resources.Text_InviteSent}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Rectangle.Style>
                                                    </Rectangle>
                                                    <Button ToolTip="{x:Static props:Resources.Text_SendInvite}"
                                                        Command="{Binding DataContext.InviteUserCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}">
                                                        <Path Data="{StaticResource InviteIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
                                                    </Button>
                                                    <Button ToolTip="{x:Static props:Resources.Text_Update}"
                                                        Command="{Binding DataContext.UpdateUserCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}">
                                                        <Path Data="{StaticResource ArrowClockwiseIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
                                                    </Button>
                                                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="5 0 0 0">
                                                        <TextBlock.ToolTip>
                                                            <TextBlock>
                                                            <Run Text="{Binding Name}"/>
                                                            <LineBreak/>
                                                            <Run Text="{Binding Id}"/>
                                                            </TextBlock>
                                                        </TextBlock.ToolTip>
                                                </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </GroupBox>

                                <StackPanel Grid.Row="4" Orientation="Horizontal"
                                            VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0 1 5 0">
                                    <StackPanel.Resources>
                                        <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button.WindowCommands}">
                                            <Setter Property="Padding" Value="5"/>
                                        </Style>

                                        <Style TargetType="Path" BasedOn="{StaticResource ButtonIconPathStyle}"/>
                                    </StackPanel.Resources>

                                    <Button ToolTip="{x:Static props:Resources.Text_Update}"
                                        Command="{Binding DataContext.UpdateGroupCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}">
                                        <Path Data="{StaticResource ArrowClockwiseIcon}" Fill="White"/>
                                    </Button>
                                    <Button ToolTip="{x:Static props:Resources.Text_SendInvite}"
                                        Command="{Binding DataContext.InviteGroupCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}">
                                        <Path Data="{StaticResource InviteIcon}" Fill="White"/>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                    <!--グループパネルは折り返して表示-->
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <!--必要に応じてスクロールバーを表示-->
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <ScrollViewer>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                </ItemsControl>
            </GroupBox>

            <!--送信先設定-->
            <GroupBox Grid.Row="0" Grid.Column="2" Grid.RowSpan="5" Header="{x:Static props:Resources.Text_SendTargetSetting}"
                      IsEnabled="{Binding IsLoggedIn}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Text="{x:Static props:Resources.Text_UserListFile}"
                               VerticalAlignment="Center"/>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Text="{Binding UserListFilePath}" IsReadOnly="True" 
                                 VerticalContentAlignment="Center"/>
                        <Button Grid.Column="1" Content="..." Command="{Binding SelectUserListFileCommand}"
                            ToolTip="{x:Static props:Resources.Text_SelectFile}"/>
                    </Grid>

                    <DataGrid Grid.Row="2" ItemsSource="{Binding Users}" AutoGenerateColumns="False" CanUserResizeRows="False"
                              CanUserAddRows="False" IsReadOnly="True" VirtualizingPanel.ScrollUnit="Pixel" Margin="0 5 0 0">
                        <!--セルの垂直中央寄せ-->
                        <DataGrid.Resources>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                                            <Grid Background="{TemplateBinding Background}">
                                                <ContentPresenter VerticalAlignment="Center"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DataGrid.Resources>

                        <DataGrid.Columns>
                            <!--グループ名-->
                            <DataGridTextColumn Binding="{Binding GroupName}" MinWidth="50">
                                <DataGridTextColumn.Header>
                                    <Path Data="{StaticResource GroupIcon}" Fill="{StaticResource GrayColorBrush}"
                                          VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" Height="12"/>
                                </DataGridTextColumn.Header>

                                <DataGridTextColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MahApps.Styles.DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTextColumn.HeaderStyle>
                            </DataGridTextColumn>

                            <!--名前-->
                            <DataGridTextColumn Header="{x:Static props:Resources.Text_Username}" Binding="{Binding Name}" MinWidth="60"/>

                            <!--ID-->
                            <!--<DataGridTextColumn Header="{x:Static props:Resources.Text_ID}" Binding="{Binding Id}" Width="245" CanUserResize="False"/>-->

                            <!--Invite送信済みか-->
                            <DataGridTemplateColumn SortMemberPath="HasInvited" MinWidth="40">
                                <!--Header-->
                                <DataGridTemplateColumn.Header>
                                    <Border>
                                        <Path Data="{StaticResource InviteIcon}" Fill="{StaticResource GrayColorBrush}"
                                              VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" Height="16"/>
                                    </Border>
                                </DataGridTemplateColumn.Header>

                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MahApps.Styles.DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>

                                <!--内容-->
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Background="Transparent">

                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="ToolTip" Value="{x:Static props:Resources.Text_NotSentInviteYet}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasInvited}" Value="True">
                                                            <Setter Property="ToolTip" Value="{x:Static props:Resources.Text_InviteSent}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Path Data="{StaticResource InviteIcon}" Fill="{StaticResource LightBlueColorBrush}"
                                                      VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" Height="16" Margin="4">
                                                <Path.Style>
                                                    <Style TargetType="{x:Type Path}">
                                                        <Setter Property="Visibility" Value="Hidden"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding HasInvited}" Value="True">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Path.Style>
                                            </Path>

                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <!--ワールドにいるか-->
                            <DataGridTemplateColumn SortMemberPath="IsInInstance" MinWidth="40">
                                <!--Header-->
                                <DataGridTemplateColumn.Header>
                                    <Border Background="Transparent">
                                        <Path Data="{StaticResource LocationIcon}" Fill="{StaticResource GrayColorBrush}"
                                              VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" Height="16"/>
                                    </Border>
                                </DataGridTemplateColumn.Header>

                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MahApps.Styles.DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>

                                <!--内容-->
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Background="Transparent">

                                            <Border.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="ToolTip" Value="{x:Static props:Resources.Text_UserOffline}"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsInInstance}" Value="False"/>
                                                                <Condition Binding="{Binding IsOnline}" Value="True"/>
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="ToolTip" Value="{x:Static props:Resources.Text_UserNotInInstance}"/>
                                                        </MultiDataTrigger>

                                                        <DataTrigger Binding="{Binding IsInInstance}" Value="True">
                                                            <Setter Property="ToolTip" Value="{x:Static props:Resources.Text_UserInInstance}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Path VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform" Height="16" Margin="4">
                                                <Path.Style>
                                                    <Style TargetType="{x:Type Path}">
                                                        <Setter Property="Data" Value="{StaticResource LocationOffIcon}"/>
                                                        <Setter Property="Fill" Value="{StaticResource GrayColorBrush}"/>
                                                        <Style.Triggers>
                                                            <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding IsInInstance}" Value="False"/>
                                                                    <Condition Binding="{Binding IsOnline}" Value="True"/>
                                                                </MultiDataTrigger.Conditions>
                                                                <Setter Property="Data" Value="{StaticResource LocationIcon}"/>
                                                                <Setter Property="Fill" Value="{StaticResource OrangeColorBrush}"/>
                                                            </MultiDataTrigger>

                                                            <DataTrigger Binding="{Binding IsInInstance}" Value="True">
                                                                <Setter Property="Data" Value="{StaticResource LocationIcon}"/>
                                                                <Setter Property="Fill" Value="{StaticResource GreenColorBrush}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Path.Style>
                                            </Path>

                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>

                    </DataGrid>

                    <!--状態更新ボタン-->
                    <Button Grid.Row="3" Command="{Binding UpdateAllCommand}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Path Data="{StaticResource ArrowClockwiseIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
                            <TextBlock Text="{x:Static props:Resources.Text_Update}" VerticalAlignment="Center" Margin="5 0 0 0"/>
                        </StackPanel>
                    </Button>

                    <!--Invite実行ボタン-->
                    <Button Grid.Row="4" Command="{Binding InviteAllCommand}" Visibility="{Binding IsInviting, Converter={StaticResource BoolInvertToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Path Data="{StaticResource InviteIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
                            <TextBlock Text="{x:Static props:Resources.Text_SendInvite}" VerticalAlignment="Center" Margin="5 0 0 0"/>
                        </StackPanel>
                    </Button>

                    <!--Invite中断ボタン-->
                    <Button Grid.Row="4" Command="{Binding AbortInviteCommand}" Visibility="{Binding IsInviting, Converter={StaticResource BoolToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Path Data="{StaticResource AbortInviteIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
                            <TextBlock VerticalAlignment="Center" Margin="5 0 0 0">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Text" Value="{x:Static props:Resources.Text_AbortInvite}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsInviteAborting}" Value="True">
                                                <Setter Property="Text" Value="{x:Static props:Resources.Text_AbortingInvite}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Button>
                </Grid>
            </GroupBox>

            <GridSplitter Grid.Row="3" Height="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

            <!--ログ-->
            <GroupBox Grid.Row="4" Header="{x:Static props:Resources.Text_Log}">
                <ListBox ItemsSource="{Binding Logs}" VirtualizingPanel.ScrollUnit="Pixel" av:ItemsSource="{av:SampleData ItemCount=5}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <TextBlock Text="{Binding Time, StringFormat=HH:mm:ss}" Width="60" DockPanel.Dock="Left"/>
                                <TextBlock Text="{Binding Message}" TextWrapping="Wrap" DockPanel.Dock="Right"/>
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
            <Button Grid.Row="4" ToolTip="{x:Static props:Resources.Text_ClearLog}"
                    Command="{Binding ClaerLogCommand}"
                    VerticalAlignment="Top" HorizontalAlignment="Right"
                    Style="{StaticResource MahApps.Styles.Button.WindowCommands}" Margin="0 6 0 0">
                <Path Data="{StaticResource BroomIcon}" Style="{StaticResource ButtonIconPathStyle}"/>
            </Button>
        </Grid>

        <!--ステータスバー-->
        <StatusBar Grid.Row="2" Padding="2 0 0 0">
            <ProgressBar Width="150" Height="10" IsIndeterminate="True" Visibility="{Binding IsLoading, Converter={conv:BoolToVisibilityConverter FalseVisibility=Collapsed}}"/>
            <ProgressBar Width="150" Height="10" Value="{Binding InviteProgress}" Visibility="{Binding IsInviting, Converter={conv:BoolToVisibilityConverter FalseVisibility=Collapsed}}">
                <ProgressBar.ToolTip>
                    <TextBlock Text="{Binding InviteProgress, StringFormat={x:Static props:Resources.Text_SendingInvite}}"/>
                </ProgressBar.ToolTip>
            </ProgressBar>
        </StatusBar>
    </Grid>
</mah:MetroWindow>