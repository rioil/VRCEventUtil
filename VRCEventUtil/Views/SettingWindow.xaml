<Window x:Class="VRCEventUtil.SettingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:VRCEventUtil.Views"
        xmlns:vm="clr-namespace:VRCEventUtil.ViewModels"
        Title="設定" Height="500" Width="400"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner"
        Icon="/VRCEventUtil;component/Resources/settings.png">

    <Window.DataContext>
        <vm:SettingWindowViewModel />
    </Window.DataContext>

    <behaviors:Interaction.Triggers>
        <!-- When ContentRendered event raised, Initialize method of ViewModel would be called. -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize" />
        </behaviors:EventTrigger>

        <!-- Dispose method is called, when Window closing. -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="ConfirmMessage">
            <l:ConfirmationDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="OpenFileDialog">
            <l:OpenFileDialogInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"/>
        </l:InteractionMessageTrigger>

        <!-- ウィンドウを閉じる -->
        <l:InteractionMessageTrigger MessageKey="CloseWindow" Messenger="{Binding Messenger}">
            <l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False">
                <l:DirectInteractionMessage>
                    <l:WindowActionMessage Action="Close"/>
                </l:DirectInteractionMessage>
            </l:WindowInteractionMessageAction>
        </l:InteractionMessageTrigger>

        <!-- If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior. -->

    </behaviors:Interaction.Triggers>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <StackPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="0 0 0 5"/>
                </Style>

                <Style TargetType="TextBox">
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="0 0 0 10"/>
                </Style>

                <Style TargetType="CheckBox">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Margin" Value="0 0 0 10"/>
                </Style>

                <Style TargetType="Slider">
                    <Setter Property="Margin" Value="0 0 0 10"/>
                    <Setter Property="Focusable" Value="False"/>
                </Style>

                <Style TargetType="Button">
                    <Setter Property="Margin" Value="0 0 0 10"/>
                </Style>

                <Style TargetType="StackPanel">
                    <Setter Property="Focusable" Value="False"/>
                </Style>

                <Style TargetType="GroupBox">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Padding" Value="0 5 0 0"/>
                </Style>
            </StackPanel.Resources>
            
            <GroupBox Header="全般">
                <StackPanel>
                    <CheckBox IsChecked="{Binding Settings.SaveAuthCookies}" Content="ログイン状態を保存する"/>
                    <TextBlock Text="API呼び出し最小間隔（秒）"/>
                    <DockPanel>
                        <TextBox Text="{Binding Settings.ApiCallIntervalSec}" Width="25" DockPanel.Dock="Right" Margin="5 0 0 10"
                                 VerticalContentAlignment="Center" MaxLength="2"/>
                        <Slider Value="{Binding Settings.ApiCallIntervalSec}" TickPlacement="BottomRight"
                                Minimum="0" Maximum="60"/>
                    </DockPanel>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="VRChat起動">
                <StackPanel>
                    <TextBlock Text="steam.exeのパス"/>
                    <DockPanel>
                        <Button Content="..." Command="{Binding SelectSteamExePathCommand}" Width="30"
                                DockPanel.Dock="Right" ToolTip="ファイルを選択"/>
                        <TextBox Text="{Binding Settings.SteamExePath}" IsReadOnly="True"
                                 ToolTip="{Binding Settings.SteamExePath}" Margin="0 0 0 10">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="ToolTip" Value="{Binding Settings.SteamExePath}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Settings.SteamExePath}" Value="{x:Null}">
                                            <Setter Property="ToolTip" Value="{Binding Settings.SteamExePath}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Settings.SteamExePath}" Value="">
                                            <Setter Property="ToolTip" Value="{Binding Settings.SteamExePath}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </DockPanel>
                    
                    <CheckBox IsChecked="{Binding Settings.UseVRMode}" Content="VRモードを使用する"/>
                </StackPanel>
            </GroupBox>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
            <StackPanel.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="150"/>
                    <Setter Property="Margin" Value="5 0"/>
                </Style>
            </StackPanel.Resources>
            <Button Content="OK" Command="{Binding SaveCommand}"/>
            <Button Content="キャンセル" Command="{Binding CancelCommand}"/>
        </StackPanel>
    </Grid>
</Window>